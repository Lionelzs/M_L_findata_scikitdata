import codecademylib3_seaborn
import numpy as np
from matplotlib import pyplot as plt
from sklearn import datasets

digits = datasets.load_digits()
#print(digits)
#print(digits.DESCR)
print(digits.data)
print(digits.target)
#plt.gray() 
plt.matshow(digits.images[100])
plt.show()
print(digits.target[100])


from sklearn.cluster import KMeans
#for k in range(1:10):
model = KMeans(n_clusters = 10)
model.fit(digits.data)
fig = plt.figure(figsize=(8,3))
fig.suptitle('Cluser Center Images', fontsize=14, fontweight='bold')
for i in range(10):
  # Initialize subplots in a grid of 2X5, at i+1th position
  ax = fig.add_subplot(2, 5, 1 + i)
  # Display images
  ax.imshow(model.cluster_centers_[i].reshape((8, 8)), cmap=plt.cm.binary)
plt.show()
  
new_samples = np.array([
[0.00,0.00,2.82,6.79,7.47,5.11,1.07,0.00,0.00,0.76,7.62,7.55,5.41,7.47,5.87,0.00,0.00,0.08,3.96,7.55,4.81,5.80,6.10,0.00,0.00,0.00,0.00,0.76,5.49,7.62,4.80,0.00,0.00,0.00,0.08,5.26,7.62,4.57,0.15,0.00,0.00,0.00,3.05,7.62,7.09,1.83,0.00,0.00,0.00,0.00,5.79,7.62,7.32,7.62,6.87,0.00,0.00,0.00,0.69,0.99,0.46,3.05,2.29,0.00],
[0.00,0.00,4.04,7.63,7.62,5.49,0.23,0.00,0.00,2.14,7.63,4.65,4.11,7.62,0.77,0.00,0.61,7.17,6.56,0.23,2.82,7.62,2.82,0.00,3.28,7.62,1.53,0.00,0.08,6.48,6.86,0.69,3.81,7.62,0.61,0.00,0.00,2.75,7.62,1.53,1.68,7.40,5.42,0.00,0.08,5.80,7.55,1.15,0.00,3.89,7.62,5.87,4.81,7.62,3.43,0.00,0.00,0.00,3.51,7.17,7.63,4.35,0.00,0.00],
[0.00,0.00,1.15,6.18,7.47,3.82,0.00,0.00,0.00,0.00,6.17,7.17,5.95,7.62,2.13,0.00,0.00,0.00,7.62,3.96,0.92,7.62,7.02,0.00,0.00,0.00,7.63,5.34,4.27,7.62,7.63,1.15,0.00,0.00,5.87,7.62,7.62,6.41,7.62,2.06,0.00,0.00,3.05,1.14,0.00,1.52,7.62,2.28,0.00,0.00,7.01,7.17,3.97,1.98,7.62,2.29,0.00,0.00,1.45,5.87,7.55,7.47,7.62,1.75],
[0.00,0.00,2.14,7.55,4.73,0.00,0.00,0.00,0.00,0.00,6.18,6.64,0.61,0.00,0.00,0.00,0.00,1.29,7.63,3.28,0.00,0.00,0.00,0.00,0.00,4.12,7.62,0.91,0.92,5.03,0.53,0.00,0.00,6.63,5.94,0.00,2.29,7.62,2.98,0.00,0.68,7.63,6.33,5.34,6.10,7.62,3.05,0.00,0.99,7.40,7.17,5.49,5.49,7.62,2.97,0.00,0.00,0.00,0.00,0.00,0.00,1.83,0.23,0.00]
])

new_labels = model.predict(new_samples)
for i in range(len(new_labels)):
  if new_labels[i] == 0:
    print(0, end='')
  elif new_labels[i] == 1:
    print(9, end='')
  elif new_labels[i] == 2:
    print(2, end='')
  elif new_labels[i] == 3:
    print(1, end='')
  elif new_labels[i] == 4:
    print(6, end='')
  elif new_labels[i] == 5:
    print(8, end='')
  elif new_labels[i] == 6:
    print(4, end='')
  elif new_labels[i] == 7:
    print(5, end='')
  elif new_labels[i] == 8:
    print(7, end='')
  elif new_labels[i] == 9:
    print(3, end='')
    
  print(new_labels) 

  


